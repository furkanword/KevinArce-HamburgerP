// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DbAppContext))]
    [Migration("20230915180322_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Chefs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdChef");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Especialidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("chef", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa_ingredientes", b =>
                {
                    b.Property<int>("Hamburguesa_id")
                        .HasColumnType("int");

                    b.Property<int>("Ingrediente_Id")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Hamburguesa_id", "Ingrediente_Id");

                    b.HasIndex("Ingrediente_Id");

                    b.ToTable("hamburguesa_ingrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHamburguesa");

                    b.Property<int>("Categoria_id")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("Chef_id")
                        .HasColumnType("int");

                    b.Property<int?>("ChefsId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreHamburguesa");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PrecioHamburguesa");

                    b.HasKey("Id");

                    b.HasIndex("CategoriasId");

                    b.HasIndex("ChefsId");

                    b.ToTable("hamburguesa", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ingredientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdIngrediente");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DescripcionIngrediente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreIngrediente");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PrecioIngrediente");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("StockIngrediente");

                    b.HasKey("Id");

                    b.ToTable("ingrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa_ingredientes", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburguesas", "Hamburguesas")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("Hamburguesa_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ingredientes", "Ingredientes")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("Ingrediente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamburguesas");

                    b.Navigation("Ingredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesas", b =>
                {
                    b.HasOne("Dominio.Entities.Categorias", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriasId");

                    b.HasOne("Dominio.Entities.Chefs", "Chefs")
                        .WithMany()
                        .HasForeignKey("ChefsId");

                    b.Navigation("Categorias");

                    b.Navigation("Chefs");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesas", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingredientes", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
